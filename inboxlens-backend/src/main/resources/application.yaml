spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    url: ${SPRING_DATASOURCE_URL}
  jpa:
    hibernate:
      ddl-auto: none
    open-in-view: false
  security:
    oauth2:
      client:
        registration:
          google: # For connecting Google account
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - "email"
              - "profile"
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            authorization-grant-type: "authorization_code"
        provider:
          google:
            authorization-uri: "https://accounts.google.com/o/oauth2/v2/auth?access_type=offline"
            token-uri: "https://oauth2.googleapis.com/token"
  mail:
    host: smtp-relay.brevo.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          from: ${MAIL_FROM}

gmail:
  oauth2:
    client-id: ${GMAIL_CLIENT_ID}
    client-secret: ${GMAIL_CLIENT_SECRET}
    scope: "https://www.googleapis.com/auth/gmail.readonly"
    auth-uri: "https://accounts.google.com/o/oauth2/v2/auth"
    redirect-uri: "${BACKEND_URL}/api/gmail/oauth2/callback"
    token-uri: "https://oauth2.googleapis.com/token"

jwt:
  secret:
    key: ${JWT_SECRET_KEY}

open:
  api:
    key: ${OPEN_API_KEY}
server:
  forward-headers-strategy: native
  servlet:
    session:
      cookie:
        secure: true
        same-site: lax
